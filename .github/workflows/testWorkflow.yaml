name: GitHub Actions Test
run-name: ${{ github.actor }} workflow test
on: 
  push:
    branches:    
      - 'staging'
      - '!main'
jobs:
  testJob:
    runs-on: ubuntu-latest
    steps:
      - run: echo "Hi! I'm running because of a ${{ github.event_name }} event."
      - run: echo "Checking out the repository from ${{ github.repository }}."
      - name: Clone repository code
        uses: actions/checkout@v4
      - run: echo "Repository cloned, I think I'm ready. The files look like this:"
      - name: List files
        run: ls ${{ github.workspace }}
      - name: Log into Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Test azure login by getting details
        run: az account show
      - name: add extension
        run: az extension add --name ml
      - name: create job
        run: az ml job create --file production/job.yaml --resource-group assignment-snobin --workspace-name assignmentsnobin
      # Wait for the Azure ML job to complete
      - name: Wait for Azure ML Job
        id: wait-for-job
        run: |
          job_status="NotStarted"
          while [ "$job_status" != "Completed" ]; do
            job_status=$(az ml job show --resource-group assignment-snobin --workspace-name assignmentsnobin --name human-action-classifier-job --query 'status' -o tsv)
            echo "Job Status: $job_status"
            if [ "$job_status" != "Completed" ]; then
              sleep 60  # Adjust the sleep interval as needed
            fi
          done
        shell: bash

      # Get the final status of the Azure ML job
      - name: Get Azure ML Job Status
        run: |
          job_status=$(az ml job show --resource-group assignment-snobin --workspace-name assignmentsnobin --name human-action-classifier-job --query 'status' -o tsv)
          echo "Final Job Status: $job_status"
      # Register the model if the job is completed
      - name: Register the Model
        if: ${{ steps.wait-for-job.outputs.job_status == 'Completed' }}
        run: |
          az ml model register --model-name hac_model --asset-path azureml:hac_model:1
      # Deploy the model if the model is registered
      - name: Deploy the Model
        if: ${{ success() && steps.wait-for-job.outputs.job_status == 'Completed' }}
        run: |
          az ml model deploy --model-name hac_model --deployment-name hac_model_staging --deployment-cluster assignment-ml-compute --overwrite
